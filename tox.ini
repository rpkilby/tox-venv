[tox]
envlist = py27, py34, py35, py36, py37, pypy, coverage, fix_lint

[testenv]
description = run test suite under {basepython}
commands =
    pytest \
    --cov "{envsitepackagesdir}/tox_venv" \
    --cov-config "{toxinidir}/tox.ini" \
    --timeout 180 \
    --junitxml {env:JUNIT_XML_FILE:{toxworkdir}/.test.{envname}.xml} \
    {posargs:.}

setenv = PIP_DISABLE_VERSION_CHECK = 1
         VIRTUALENV_DOWNLOAD=0
         COVERAGE_FILE = {env:COVERAGE_FILE:{toxworkdir}/.coverage.{envname}}
         PYTHONDONTWRITEBYTECODE=1
deps =  pip >= 19.0.1
        tox[testing] >= 3.8.1, < 4

[testenv:coverage]
description = [run locally after tests]: combine coverage data and create report;
              generates a diff coverage against origin/master (can be changed by setting DIFF_AGAINST env var)
deps = {[testenv]deps}
       coverage >= 4.4.1, < 5
       diff_cover
skip_install = True
passenv = DIFF_AGAINST
setenv = COVERAGE_FILE={toxworkdir}/.coverage
commands = coverage combine
           coverage report -m
           coverage xml -o {toxworkdir}/coverage.xml
           coverage html -d {toxworkdir}/htmlcov
           diff-cover --compare-branch {env:DIFF_AGAINST:origin/master} {toxworkdir}/coverage.xml
depends = py27, py34, py35, py36, py37, pypy
parallel_show_output = True

[testenv:dev]
description = dev environment with all deps at {envdir}
usedevelop = True
commands = python -m pip list --format=columns
           python -c "print(r'{envpython}')"

[testenv:fix_lint]
description = format the code base to adhere to our styles, and complain about what we cannot do automatically
basepython = python3.7
passenv = HOMEPATH
          # without PROGRAMDATA cloning using git for Windows will fail with an
          # `error setting certificate verify locations` error
          PROGRAMDATA
extras = lint
deps = pre-commit >= 1.14.4, < 2
skip_install = True
commands = pre-commit run --all-files --show-diff-on-failure
           python -c 'import pathlib; print("hint: run \{\} install to add checks as pre-commit hook".format(pathlib.Path(r"{envdir}") / "bin" / "pre-commit"))'

[coverage:run]
branch = true
parallel = true

[coverage:report]
skip_covered = True
show_missing = True
exclude_lines =
    \#\s*pragma: no cover
    ^\s*raise AssertionError\b
    ^\s*raise NotImplementedError\b
    ^\s*return NotImplemented\b
    ^\s*raise$
    ^if __name__ == ['"]__main__['"]:$

[coverage:paths]
source = src/tox_venv
         .tox/*/lib/python*/site-packages/tox_venv
         .tox/pypy*/site-packages/tox_venv
         .tox\*\Lib\site-packages\tox_venv
         */src/tox_venv
         *\src\tox_venv

[flake8]
ignore = E203
